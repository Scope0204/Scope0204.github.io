{"version":3,"sources":["webpack://flexible-gatsby/./src/components/seo.js","webpack://flexible-gatsby/./src/templates/blog-list.js"],"names":["SEO","description","lang","meta","title","site","useStaticQuery","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","BlogIndex","render","data","this","props","siteTitle","posts","allMarkdownRemark","edges","pageContext","currentPage","numPages","isFirst","isLast","prevPage","toString","nextPage","console","log","keywords","className","map","node","key","fields","slug","frontmatter","img","childImageSharp","gatsbyImageData","Link","to","categories","style","backgroundImage","images","fallback","src","excerpt","date","timeToRead","role","rel","React"],"mappings":"yJAYA,SAASA,EAAT,GAAkD,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MAC5BC,GAASC,oBAAe,YAAxBD,KAcFE,EAAkBN,GAAeI,EAAKG,aAAaP,YAEzD,OACI,gBAAC,IAAD,CACIQ,eAAgB,CACZP,QAEJE,MAAOA,EACPM,cAAa,QAAUL,EAAKG,aAAaJ,MACzCD,KAAM,CACF,CACIQ,KAAK,cACLC,QAASL,GAEb,CACIM,SAAS,WACTD,QAASR,GAEb,CACIS,SAAS,iBACTD,QAASL,GAEb,CACIM,SAAS,UACTD,QAAQ,WAEZ,CACID,KAAK,eACLC,QAAQ,WAEZ,CACID,KAAK,kBACLC,QAASP,EAAKG,aAAaM,QAE/B,CACIH,KAAK,gBACLC,QAASR,GAEb,CACIO,KAAK,sBACLC,QAASL,IAEfQ,OAAOZ,KAKrBH,EAAIgB,aAAe,CACfd,KAAK,KACLC,KAAM,GACNF,YAAY,IAUhB,O,+FCjFMgB,E,6FACFC,OAAA,WACI,IAAQC,EAASC,KAAKC,MAAdF,KACFG,EAAYH,EAAKd,KAAKG,aAAaJ,MACnCmB,EAAQJ,EAAKK,kBAAkBC,MACrC,EAAkCL,KAAKC,MAAMK,YAArCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,SACfC,EAA0B,IAAhBF,EACVG,EAASH,IAAgBC,EACzBG,EAAWJ,EAAc,GAAM,EAAI,KAAOA,EAAc,GAAGK,WAC3DC,GAAYN,EAAc,GAAGK,WAEnC,OADAE,QAAQC,IAAI,uBAAwBhB,GAEhC,gBAAC,IAAD,KACI,gBAAC,IAAD,CACIf,MAAOkB,EACPc,SAAU,CAAC,OAAD,iCAEd,uBAAKC,UAAU,wBACVd,EAAMe,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACV,OACI,2BAASF,UAAU,OAAOG,IAAKD,EAAKE,OAAOC,MACtCH,EAAKI,YAAYC,KACdL,EAAKI,YAAYC,IAAIC,iBACrBN,EAAKI,YAAYC,IAAIC,gBAAgBC,iBACjC,gBAAC,EAAAC,KAAD,CACIC,GAAI,IAAMT,EAAKI,YAAYM,WAAaV,EAAKE,OAAOC,KACpDL,UAAU,iBACVa,MAAO,CACHC,gBAAgB,OAAQZ,EAAKI,YAAYC,IAAIC,gBAAgBC,gBAAgBM,OAAOC,SAASC,IAA9E,OAI/B,uBAAKjB,UAAU,gBACX,sBAAIA,UAAU,cACV,gBAAC,EAAAU,KAAD,CAAMC,GAAI,IAAMT,EAAKI,YAAYM,WAAaV,EAAKE,OAAOC,MAAOH,EAAKI,YAAYvC,QAEtF,yBAAImC,EAAKgB,SACT,wBAAMlB,UAAU,aACXE,EAAKI,YAAYa,KADtB,QAGA,wBAAMnB,UAAU,cACXE,EAAKkB,WADV,qBAOhB,uBAAKpB,UAAU,aACX,uBAAKA,UAAU,aAAaqB,KAAK,cAC7B,2BACM7B,GACE,yBACI,gBAAC,EAAAkB,KAAD,CAAMC,GAAIjB,EAAU4B,IAAI,OAAOtB,UAAU,eAAzC,oBAKR,yBACI,wBAAMA,UAAU,eAAhB,QACUV,EADV,OAC2BC,KAG7BE,GACE,yBACI,gBAAC,EAAAiB,KAAD,CAAMC,GAAIf,EAAU0B,IAAI,OAAOtB,UAAU,eAAzC,sB,GAhEhBuB,aA8ExB","file":"component---src-templates-blog-list-js-1a59d9cc5797cfd3900a.js","sourcesContent":["/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { useStaticQuery, graphql } from 'gatsby'\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n    const { site } = useStaticQuery(\r\n        graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n    )\r\n\r\n    const metaDescription = description || site.siteMetadata.description\r\n\r\n    return (\r\n        <Helmet\r\n            htmlAttributes={{\r\n                lang,\r\n            }}\r\n            title={title}\r\n            titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n            meta={[\r\n                {\r\n                    name: `description`,\r\n                    content: metaDescription,\r\n                },\r\n                {\r\n                    property: `og:title`,\r\n                    content: title,\r\n                },\r\n                {\r\n                    property: `og:description`,\r\n                    content: metaDescription,\r\n                },\r\n                {\r\n                    property: `og:type`,\r\n                    content: `website`,\r\n                },\r\n                {\r\n                    name: `twitter:card`,\r\n                    content: `summary`,\r\n                },\r\n                {\r\n                    name: `twitter:creator`,\r\n                    content: site.siteMetadata.author,\r\n                },\r\n                {\r\n                    name: `twitter:title`,\r\n                    content: title,\r\n                },\r\n                {\r\n                    name: `twitter:description`,\r\n                    content: metaDescription,\r\n                },\r\n            ].concat(meta)}\r\n        />\r\n    )\r\n}\r\n\r\nSEO.defaultProps = {\r\n    lang: `en`,\r\n    meta: [],\r\n    description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n    description: PropTypes.string,\r\n    lang: PropTypes.string,\r\n    meta: PropTypes.arrayOf(PropTypes.object),\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import React from 'react'\r\nimport { Link, graphql } from 'gatsby'\r\n\r\nimport DefaultLayout from '../components/layout'\r\nimport SEO from '../components/seo'\r\n\r\nclass BlogIndex extends React.Component {\r\n    render() {\r\n        const { data } = this.props\r\n        const siteTitle = data.site.siteMetadata.title\r\n        const posts = data.allMarkdownRemark.edges\r\n        const { currentPage, numPages } = this.props.pageContext\r\n        const isFirst = currentPage === 1\r\n        const isLast = currentPage === numPages\r\n        const prevPage = currentPage - 1 === 1 ? '/' : (currentPage - 1).toString()\r\n        const nextPage = (currentPage + 1).toString()\r\n        console.log('blog-list.js 의 data:', data)\r\n        return (\r\n            <DefaultLayout>\r\n                <SEO\r\n                    title={siteTitle}\r\n                    keywords={[`blog`, `gatsby`, `javascript`, `react`]}\r\n                />\r\n                <div className=\"content-box clearfix\">\r\n                    {posts.map(({ node }) => {\r\n                        return (\r\n                            <article className=\"post\" key={node.fields.slug}>\r\n                                {node.frontmatter.img &&\r\n                                    node.frontmatter.img.childImageSharp &&\r\n                                    node.frontmatter.img.childImageSharp.gatsbyImageData && (\r\n                                        <Link\r\n                                            to={\"/\" + node.frontmatter.categories + node.fields.slug}\r\n                                            className=\"post-thumbnail\"\r\n                                            style={{\r\n                                                backgroundImage: `url(${node.frontmatter.img.childImageSharp.gatsbyImageData.images.fallback.src})`,\r\n                                            }}\r\n                                        />\r\n                                    )}\r\n                                <div className=\"post-content\">\r\n                                    <h2 className=\"post-title\">\r\n                                        <Link to={\"/\" + node.frontmatter.categories + node.fields.slug}>{node.frontmatter.title}</Link>\r\n                                    </h2>\r\n                                    <p>{node.excerpt}</p>\r\n                                    <span className=\"post-date\">\r\n                                        {node.frontmatter.date}&nbsp;&nbsp;—&nbsp;\r\n                                    </span>\r\n                                    <span className=\"post-words\">\r\n                                        {node.timeToRead} minute read\r\n                                    </span>\r\n                                </div>\r\n                            </article>\r\n                        )\r\n                    })}\r\n                    <div className=\"container\">\r\n                        <nav className=\"pagination\" role=\"navigation\">\r\n                            <ul>\r\n                                {!isFirst && (\r\n                                    <p>\r\n                                        <Link to={prevPage} rel=\"prev\" className=\"newer-posts\">\r\n                                            ← Previous Page\r\n                                        </Link>\r\n                                    </p>\r\n                                )}\r\n                                <p>\r\n                                    <span className=\"page-number\">\r\n                                        Page {currentPage} of {numPages}\r\n                                    </span>\r\n                                </p>\r\n                                {!isLast && (\r\n                                    <p>\r\n                                        <Link to={nextPage} rel=\"next\" className=\"older-posts\">\r\n                                            Next Page →\r\n                                        </Link>\r\n                                    </p>\r\n                                )}\r\n                            </ul>\r\n                        </nav>\r\n                    </div>\r\n                </div>\r\n            </DefaultLayout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BlogIndex\r\n\r\nexport const pageQuery = graphql`\r\n  query blogPageQuery($skip: Int!, $limit: Int!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      limit: $limit\r\n      skip: $skip\r\n    ) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          timeToRead\r\n          frontmatter {\r\n            date(formatString: \"YYYY, MMM DD\")\r\n            title\r\n            categories\r\n            img {\r\n              childImageSharp {\r\n                gatsbyImageData(placeholder: BLURRED,\r\n                  layout: FULL_WIDTH,\r\n                  formats: [AUTO, AVIF, WEBP])\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}